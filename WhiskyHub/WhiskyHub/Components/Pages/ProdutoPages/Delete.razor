@page "/produtos/delete"
@inject WhiskyHub.Data.ApplicationDbContext DB
@using WhiskyHub.Data
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Produto</h4>
    <hr />
    @if (produto is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@produto.Nome</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Descricao</dt>
            <dd class="col-sm-10">@produto.Descricao</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Marca</dt>
            <dd class="col-sm-10">@produto.Marca</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Tipo</dt>
            <dd class="col-sm-10">@produto.Tipo</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Idade</dt>
            <dd class="col-sm-10">@produto.Idade</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Volume</dt>
            <dd class="col-sm-10">@produto.Volume</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">TeorAlcoolico</dt>
            <dd class="col-sm-10">@produto.TeorAlcoolico</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Preco</dt>
            <dd class="col-sm-10">@produto.Preco</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">QuantidadeEmEstoque</dt>
            <dd class="col-sm-10">@produto.QuantidadeEmEstoque</dd>
        </dl>
        <EditForm method="post" Model="produto" OnValidSubmit="DeleteProduto" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(produto is null)">Delete</button> |
            <a href="/produtos">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Produto? produto;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        produto = await DB.Product.FirstOrDefaultAsync(m => m.Id == Id);

        if (produto is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteProduto()
    {
        DB.Product.Remove(produto!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/produtos");
    }
}
