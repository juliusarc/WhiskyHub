@page "/produtos/details"
@inject WhiskyHub.Data.ApplicationDbContext DB
@using WhiskyHub.Data
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Produto</h4>
    <hr />
    @if (produto is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@produto.Nome</dd>
            <dt class="col-sm-2">Descricao</dt>
            <dd class="col-sm-10">@produto.Descricao</dd>
            <dt class="col-sm-2">Marca</dt>
            <dd class="col-sm-10">@produto.Marca</dd>
            <dt class="col-sm-2">Tipo</dt>
            <dd class="col-sm-10">@produto.Tipo</dd>
            <dt class="col-sm-2">Idade</dt>
            <dd class="col-sm-10">@produto.Idade</dd>
            <dt class="col-sm-2">Volume</dt>
            <dd class="col-sm-10">@produto.Volume</dd>
            <dt class="col-sm-2">TeorAlcoolico</dt>
            <dd class="col-sm-10">@produto.TeorAlcoolico</dd>
            <dt class="col-sm-2">Preco</dt>
            <dd class="col-sm-10">@produto.Preco</dd>
            <dt class="col-sm-2">QuantidadeEmEstoque</dt>
            <dd class="col-sm-10">@produto.QuantidadeEmEstoque</dd>
        </dl>
        <div>
            <a href="@($"/produtos/edit?id={produto.Id}")">Edit</a> |
            <a href="@($"/produtos")">Back to List</a>
        </div>
    }
</div>

@code {
    Produto? produto;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        produto = await DB.Product.FirstOrDefaultAsync(m => m.Id == Id);

        if (produto is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
